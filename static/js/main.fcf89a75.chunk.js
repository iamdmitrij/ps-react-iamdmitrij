(this["webpackJsonpps-react-iamdmitrij"]=this["webpackJsonpps-react-iamdmitrij"]||[]).push([[0],[,,,,,function(e,n,t){"use strict";t.d(n,"a",(function(){return o}));var r=t(0),a=t.n(r),o=function(e){var n=e.htmlFor,t=e.label,r=e.required;return a.a.createElement("label",{style:{display:"block"},htmlFor:n},t," ",r&&a.a.createElement("span",{style:{color:"red"}},"*"))}},,function(e,n,t){"use strict";t.d(n,"a",(function(){return d}));var r=t(1),a=t(2),o=t(3),s=t(4),i=t(0),l=t.n(i);function p(e,n){return parseInt(n*(e/100),10)}var u=function(e){Object(s.a)(t,e);var n=Object(o.a)(t);function t(){var e;Object(r.a)(this,t);for(var a=arguments.length,o=new Array(a),s=0;s<a;s++)o[s]=arguments[s];return(e=n.call.apply(n,[this].concat(o))).getColor=function(n){return 100===e.props.percent?"green":e.props.percent>50?"lightgreen":"red"},e.getWidthAsPercentOfTotalWidth=function(){return parseInt(e.props.width*(e.props.percent/100),10)},e}return Object(a.a)(t,[{key:"render",value:function(){var e=this.props,n=e.percent,t=e.width,r=e.height;return l.a.createElement("div",{style:{border:"solid 1px lightgray",width:t}},l.a.createElement("div",{style:{width:p(this.props.percent,this.props.width),height:r,backgroundColor:this.getColor(n)}}))}}]),t}(l.a.Component);u.defaultProps={height:5};var d=u},function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));var r=t(6),a=t(0),o=t.n(a),s=t(5),i=function(e){var n=e.htmlId,t=e.name,a=e.label,i=e.type,l=void 0===i?"text":i,p=e.required,u=void 0!==p&&p,d=e.onChange,c=e.placeholder,m=e.value,h=e.error,g=e.children,y=Object(r.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return o.a.createElement("div",{style:{marginBottom:16}},o.a.createElement(s.a,{htmlFor:n,label:a,required:u}),o.a.createElement("input",Object.assign({id:n,type:l,name:t,placeholder:c,value:m,onChange:d,style:h&&{border:"solid 1px red"}},y)),g,h&&o.a.createElement("div",{className:"error",style:{color:"red"}},h))}},function(e,n,t){"use strict";t.d(n,"a",(function(){return h}));var r=t(6),a=t(1),o=t(2),s=t(3),i=t(4),l=t(0),p=t.n(l),u=t(7),d=t(10),c=t(8),m=function(e){Object(i.a)(t,e);var n=Object(s.a)(t);function t(e){var r;return Object(a.a)(this,t),(r=n.call(this,e)).toggleShowPassword=function(e){r.setState((function(e){return{showPassword:!e.showPassword}})),e&&e.preventDefault()},r.state={showPassword:!1},r}return Object(o.a)(t,[{key:"render",value:function(){var e=this.props,n=e.htmlId,t=e.value,a=e.label,o=e.error,s=e.onChange,i=e.placeholder,l=e.maxLength,m=e.showVisibilityToggle,h=e.quality,g=Object(r.a)(e,["htmlId","value","label","error","onChange","placeholder","maxLength","showVisibilityToggle","quality"]),y=this.state.showPassword;return p.a.createElement(c.a,Object.assign({htmlId:n,label:a,placeholder:i,type:y?"text":"password",onChange:s,value:t,maxLength:l,error:o,required:!0},g),m&&p.a.createElement("a",{href:"",onClick:this.toggleShowPassword,style:{marginLeft:5}},p.a.createElement(d.a,null)),t.length>0&&h&&p.a.createElement(u.a,{percent:h,width:130}))}}]),t}(p.a.Component);m.defaultProps={maxLength:50,showVisibilityToggle:!1,label:"Password"};var h=m},function(e,n,t){"use strict";t.d(n,"a",(function(){return o}));var r=t(0),a=t.n(r),o=function(){return a.a.createElement("svg",{width:"16",height:"16",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 22 22"},a.a.createElement("g",{transform:"matrix(.02146 0 0 .02146 1 1)",fill:"#4d4d4d"},a.a.createElement("path",{d:"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1"}),a.a.createElement("circle",{cx:"466.08",cy:"466.02",r:"134.5"})))}},function(e,n,t){},,,function(e,n){e.exports=[{name:"EyeIcon",description:"SVG Eye Icon",code:'import React from "react";\n\n/** SVG Eye Icon */\nconst EyeIcon = () => (\n  <svg\n    width="16"\n    height="16"\n    xmlns="http://www.w3.org/2000/svg"\n    viewBox="0 0 22 22"\n  >\n    <g transform="matrix(.02146 0 0 .02146 1 1)" fill="#4d4d4d">\n      <path d="m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1" />\n      <circle cx="466.08" cy="466.02" r="134.5" />\n    </g>\n  </svg>\n);\n\nexport default EyeIcon;\n',examples:[{name:"Example",description:"",code:'import React from "react";\nimport EyeIcon from "ps-react/EyeIcon";\n\nexport default function EyeIconExample() {\n  return <EyeIcon />;\n}\n'}]},{name:"HelloWorld",description:"A super lame component.",props:{message:{type:{name:"string"},required:!1,description:"Message to display",defaultValue:{value:'"World"',computed:!1}}},code:'import React from "react";\nimport PropTypes from "prop-types";\n\n/** A super lame component. */\nfunction HelloWorld({ message }) {\n  return <div>Hello {message}</div>;\n}\n\nHelloWorld.propTypes = {\n  /** Message to display */\n  message: PropTypes.string\n};\n\nHelloWorld.defaultProps = {\n  message: "World"\n};\n\nexport default HelloWorld;\n',examples:[{name:"ExampleHelloWorld",description:"Custom message",code:'import React from "react";\nimport HelloWorld from "ps-react/HelloWorld";\n\n/** Custom message */\nexport default function ExampleHelloWorld() {\n  return <HelloWorld message="Hello" />;\n}\n'}]},{name:"Label",description:"",props:{htmlFor:{type:{name:"string"},required:!0,description:""},label:{type:{name:"string"},required:!0,description:""},required:{type:{name:"bool"},required:!1,description:""}},code:'import React from "react";\nimport PropTypes from "prop-types";\n\nconst Label = ({ htmlFor, label, required }) => {\n  return (\n    <label style={{ display: "block" }} htmlFor={htmlFor}>\n      {label} {required && <span style={{ color: "red" }}>*</span>}\n    </label>\n  );\n};\n\nLabel.propTypes = {\n  htmlFor: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  required: PropTypes.bool\n};\n\nexport default Label;\n',examples:[{name:"ExampleOptional",description:"Optional label",code:'import React from "react";\nimport Label from "../../../components/Label";\n\n/** Optional label */\nexport default function ExampleOptional() {\n  return <Label htmlFor="test" label="test" />;\n}\n'},{name:"ExampleRequired",description:"Required label",code:'import React from "react";\nimport Label from "../../../components/Label";\n\n/** Required label */\nexport default function ExampleRequired() {\n  return <Label htmlFor="test" label="test" required />;\n}\n'}]},{name:"PasswordInput",description:"Password input with integrated label, quality tips, and show password toggle.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used by convention."},value:{type:{name:"any"},required:!1,description:"Password value"},label:{type:{name:"string"},required:!1,description:"Input label",defaultValue:{value:'"Password"',computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function called when password input value changes"},maxLength:{type:{name:"number"},required:!1,description:"Max password length accepted",defaultValue:{value:"50",computed:!1}},placeholder:{type:{name:"string"},required:!1,description:"Placeholder displayed when no password is entered"},showVisibilityToggle:{type:{name:"bool"},required:!1,description:"Set to true to show the toggle for displaying the currently entered password",defaultValue:{value:"false",computed:!1}},quality:{type:{name:"number"},required:!1,description:"Display password quality visually via ProgressBar, accepts a number between 0 and 100"},error:{type:{name:"string"},required:!1,description:"Validation error to display"}},code:'import React from "react";\nimport PropTypes from "prop-types";\nimport ProgressBar from "../ProgressBar";\nimport EyeIcon from "../EyeIcon";\nimport TextInput from "../TextInput";\n\n/** Password input with integrated label, quality tips, and show password toggle. */\nclass PasswordInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPassword: false\n    };\n  }\n\n  toggleShowPassword = event => {\n    this.setState(prevState => {\n      return { showPassword: !prevState.showPassword };\n    });\n    if (event) event.preventDefault();\n  };\n\n  render() {\n    const {\n      htmlId,\n      value,\n      label,\n      error,\n      onChange,\n      placeholder,\n      maxLength,\n      showVisibilityToggle,\n      quality,\n      ...props\n    } = this.props;\n    const { showPassword } = this.state;\n\n    return (\n      <TextInput\n        htmlId={htmlId}\n        label={label}\n        placeholder={placeholder}\n        type={showPassword ? "text" : "password"}\n        onChange={onChange}\n        value={value}\n        maxLength={maxLength}\n        error={error}\n        required\n        {...props}\n      >\n        {showVisibilityToggle && (\n          <a\n            href=""\n            onClick={this.toggleShowPassword}\n            style={{ marginLeft: 5 }}\n          >\n            <EyeIcon />\n          </a>\n        )}\n        {value.length > 0 && quality && (\n          <ProgressBar percent={quality} width={130} />\n        )}\n      </TextInput>\n    );\n  }\n}\n\nPasswordInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object\'s property so a single change handler can be used by convention.*/\n  name: PropTypes.string.isRequired,\n\n  /** Password value */\n  value: PropTypes.any,\n\n  /** Input label */\n  label: PropTypes.string,\n\n  /** Function called when password input value changes */\n  onChange: PropTypes.func.isRequired,\n\n  /** Max password length accepted */\n  maxLength: PropTypes.number,\n\n  /** Placeholder displayed when no password is entered */\n  placeholder: PropTypes.string,\n\n  /** Set to true to show the toggle for displaying the currently entered password */\n  showVisibilityToggle: PropTypes.bool,\n\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\n  quality: PropTypes.number,\n\n  /** Validation error to display */\n  error: PropTypes.string\n};\n\nPasswordInput.defaultProps = {\n  maxLength: 50,\n  showVisibilityToggle: false,\n  label: "Password"\n};\n\nexport default PasswordInput;\n',examples:[{name:"ExampleAllFeatures",description:"",code:'import React, { Component } from "react";\nimport PasswordInput from "ps-react/PasswordInput";\n\nclass ExampleAllFeatures extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: ""\n    };\n  }\n\n  getQuality() {\n    const length = this.state.password.length;\n    return length > 10 ? 100 : length * 10;\n  }\n\n  render() {\n    return (\n      <div>\n        <PasswordInput\n          htmlId="password-input-example-all-features"\n          name="password"\n          onChange={event => this.setState({ password: event.target.value })}\n          value={this.state.password}\n          minLength={8}\n          placeholder="Enter password"\n          showVisibilityToggle\n          quality={this.getQuality()}\n          {...this.props}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ExampleAllFeatures;\n'}]},{name:"ProgressBar",description:"",props:{percent:{type:{name:"number"},required:!0,description:""},width:{type:{name:"number"},required:!0,description:""},height:{type:{name:"number"},required:!1,description:"",defaultValue:{value:"5",computed:!1}}},code:'import React from "react";\nimport PropTypes from "prop-types";\n\nclass ProgressBar extends React.Component {\n  getColor = percent => {\n    if (this.props.percent === 100) return "green";\n    return this.props.percent > 50 ? "lightgreen" : "red";\n  };\n\n  getWidthAsPercentOfTotalWidth = () => {\n    return parseInt(this.props.width * (this.props.percent / 100), 10);\n  };\n\n  render() {\n    const { percent, width, height } = this.props;\n    return (\n      <div style={{ border: "solid 1px lightgray", width: width }}>\n        <div\n          style={{\n            width: this.getWidthAsPercentOfTotalWidth(),\n            height,\n            backgroundColor: this.getColor(percent)\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  percent: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number\n};\n\nProgressBar.defaultProps = {\n  height: 5\n};\nexport default ProgressBar;\n',examples:[{name:"Example100Percent",description:"100% progress",code:'import React from "react";\nimport ProgressBar from "ps-react/ProgressBar";\n\n/** 100% progress */\nexport default function Example100Percent() {\n  return <ProgressBar percent={100} width={150} height={20} />;\n}\n'},{name:"Example10Percent",description:"10% progress",code:'import React from "react";\nimport ProgressBar from "ps-react/ProgressBar";\n\n/** 10% progress */\nexport default function Example10Percent() {\n  return <ProgressBar percent={10} width={150} />;\n}\n'},{name:"Example70Percent",description:"70% progress",code:'import React from "react";\nimport ProgressBar from "ps-react/ProgressBar";\n\n/** 70% progress */\nexport default function Example70Percent() {\n  return <ProgressBar percent={70} width={150} />;\n}\n'}]},{name:"RegistrationForm",description:"Registration form with built-in validation.",props:{confirmationMessage:{type:{name:"string"},required:!1,description:"Message displayed upon successful submission",defaultValue:{value:'"Thanks for registering!"',computed:!1}},onSubmit:{type:{name:"func"},required:!0,description:"Called when form is submitted"},minPasswordLength:{type:{name:"number"},required:!1,description:"Minimum password length",defaultValue:{value:"8",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport TextInput from \'../TextInput\';\nimport PasswordInput from \'../PasswordInput\';\n\n/** Registration form with built-in validation. */\nclass RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {\n        email: \'\',\n        password: \'\'\n      },\n      errors: {},\n      submitted: false,\n    };\n  }\n\n  onChange = (event) => {\n    const user = this.state.user;\n    user[event.target.name] = event.target.value;\n    this.setState({user});\n  }\n\n  // Returns a number from 0 to 100 that represents password quality.\n  // For simplicity, just returning % of min length entered.\n  // Could enhance with checks for number, special char, unique characters, etc.\n  passwordQuality(password) {\n    if (!password) return null;\n    if (password.length >= this.props.minPasswordLength) return 100;\n    const percentOfMinLength = parseInt(password.length/this.props.minPasswordLength * 100, 10);\n    return percentOfMinLength;\n  }\n\n  validate({email, password}) {\n    const errors = {};\n    const {minPasswordLength} = this.props;\n\n    if (!email) errors.email = \'Email required.\';\n    if (password.length < minPasswordLength) errors.password = `Password must be at least ${minPasswordLength} characters.`;\n\n    this.setState({errors});\n    const formIsValid = Object.getOwnPropertyNames(errors).length === 0;\n    return formIsValid;\n  }\n\n  onSubmit = () => {\n    const {user} = this.state;\n    const formIsValid = this.validate(user);\n    if (formIsValid) {\n      this.props.onSubmit(user);\n      this.setState({submitted: true});\n    }\n  }\n\n  render() {\n    const {errors, submitted} = this.state;\n    const {email, password} = this.state.user;\n\n    return (\n      submitted ?\n      <h2>{this.props.confirmationMessage}</h2> :\n      <div>\n        <TextInput\n          htmlId="registration-form-email"\n          name="email"\n          onChange={this.onChange}\n          label="Email"\n          value={email}\n          error={errors.email}\n          required />\n\n        <PasswordInput\n          htmlId="registration-form-password"\n          name="password"\n          value={password}\n          onChange={this.onChange}\n          quality={this.passwordQuality(password)}\n          showVisibilityToggle\n          maxLength={50}\n          error={errors.password} />\n\n        <input type="submit" value="Register" onClick={this.onSubmit} />\n      </div>\n    )\n  }\n}\n\nRegistrationForm.propTypes = {\n  /** Message displayed upon successful submission */\n  confirmationMessage: PropTypes.string,\n\n  /** Called when form is submitted */\n  onSubmit: PropTypes.func.isRequired,\n\n  /** Minimum password length */\n  minPasswordLength: PropTypes.number\n}\n\nRegistrationForm.defaultProps = {\n  confirmationMessage: "Thanks for registering!",\n  minPasswordLength: 8\n};\n\nexport default RegistrationForm;',examples:[{name:"ExampleRegistrationForm",description:"",code:'import React, { Component } from "react";\nimport RegistrationForm from "ps-react/RegistrationForm";\n\nclass ExampleRegistrationForm extends Component {\n  onSubmit = user => {\n    console.log(user);\n  };\n\n  render() {\n    return <RegistrationForm onSubmit={this.onSubmit} />;\n  }\n}\n\nexport default ExampleRegistrationForm;\n'}]},{name:"TextInput",description:"",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:'"text"',computed:!1},{value:'"number"',computed:!1},{value:'"password"',computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:'import React from "react";\nimport PropTypes from "prop-types";\nimport Label from "../Label";\n\nconst TextInput = ({\n  htmlId,\n  name,\n  label,\n  type = "text",\n  required = false,\n  onChange,\n  placeholder,\n  value,\n  error,\n  children,\n  ...props\n}) => (\n  <div style={{ marginBottom: 16 }}>\n    <Label htmlFor={htmlId} label={label} required={required} />\n    <input\n      id={htmlId}\n      type={type}\n      name={name}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n      style={error && { border: "solid 1px red" }}\n      {...props}\n    />\n    {children}\n    {error && (\n      <div className="error" style={{ color: "red" }}>\n        {error}\n      </div>\n    )}\n  </div>\n);\n\nTextInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object\'s property so a single change handler can be used. */\n  name: PropTypes.string.isRequired,\n\n  /** Input label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf(["text", "number", "password"]),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** Function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to the input */\n  children: PropTypes.node\n};\n\nexport default TextInput;\n',examples:[{name:"ExampleError",description:"",code:'import TextInput from "ps-react/TextInput";\nimport React from "react";\n\nconst ExampleOptional = () => {\n  return (\n    <TextInput\n      htmlId="example-optional"\n      label="First Name"\n      name="firstname"\n      onChange={() => {}}\n      error="First name is required."\n    />\n  );\n};\n\nexport default ExampleOptional;\n'},{name:"ExampleOptional",description:"",code:'import TextInput from "ps-react/TextInput";\nimport React from "react";\n\nconst ExampleOptional = () => {\n  return (\n    <TextInput\n      htmlId="example-optional"\n      label="First Name"\n      name="firstname"\n      onChange={() => {}}\n    />\n  );\n};\n\nexport default ExampleOptional;\n'}]},{name:"TextInputBEM",description:"",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:'"text"',computed:!1},{value:'"number"',computed:!1},{value:'"password"',computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:'import React from "react";\nimport PropTypes from "prop-types";\nimport Label from "../Label";\n\nconst TextInputBEM = ({\n  htmlId,\n  name,\n  label,\n  type = "text",\n  required = false,\n  onChange,\n  placeholder,\n  value,\n  error,\n  children,\n  ...props\n}) => (\n  <div className="textinput">\n    <Label htmlFor={htmlId} label={label} required={required} />\n    <input\n      id={htmlId}\n      type={type}\n      name={name}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n      className={error && "textinput__input--state-error"}\n      {...props}\n    />\n    {children}\n    {error && <div className="textinput__error">{error}</div>}\n  </div>\n);\n\nTextInputBEM.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object\'s property so a single change handler can be used. */\n  name: PropTypes.string.isRequired,\n\n  /** Input label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf(["text", "number", "password"]),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** Function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to the input */\n  children: PropTypes.node\n};\n\nexport default TextInputBEM;\n',examples:[{name:"ExampleErrorBEM",description:"",code:'import TextInputBEM from "ps-react/TextInputBEM";\nimport React from "react";\n\nconst ExampleErrorBEM = () => {\n  return (\n    <TextInputBEM\n      htmlId="example-optional"\n      label="First Name"\n      name="firstname"\n      onChange={() => {}}\n      error="First name is required."\n    />\n  );\n};\n\nexport default ExampleErrorBEM;\n'}]},{name:"TextInputCSSModules",description:"",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:'"text"',computed:!1},{value:'"number"',computed:!1},{value:'"password"',computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:'import React from "react";\nimport PropTypes from "prop-types";\nimport Label from "../Label";\nimport styles from "./textInput.css";\n\nconst TextInputCSSModules = ({\n  htmlId,\n  name,\n  label,\n  type = "text",\n  required = false,\n  onChange,\n  placeholder,\n  value,\n  error,\n  children,\n  ...props\n}) => (\n  <div className={styles.fieldset}>\n    <Label htmlFor={htmlId} label={label} required={required} />\n    <input\n      id={htmlId}\n      type={type}\n      name={name}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n      style={error && styles.inputError}\n      {...props}\n    />\n    {children}\n    {error && <div className={styles.error}>{error}</div>}\n  </div>\n);\n\nTextInputCSSModules.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object\'s property so a single change handler can be used. */\n  name: PropTypes.string.isRequired,\n\n  /** Input label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf(["text", "number", "password"]),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** Function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to the input */\n  children: PropTypes.node\n};\n\nexport default TextInputCSSModules;\n',examples:[{name:"ExampleErrorCSSModules",description:"",code:'import TextInputCSSModules from "ps-react/TextInputCSSModules";\nimport React from "react";\n\nconst ExampleErrorCSSModules = () => {\n  return (\n    <TextInputCSSModules\n      htmlId="example-optional"\n      label="First Name"\n      name="firstname"\n      onChange={() => {}}\n      error="First name is required."\n    />\n  );\n};\n\nexport default ExampleErrorCSSModules;\n'}]},{name:"TextInputStyledComponents",description:"",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:'"text"',computed:!1},{value:'"number"',computed:!1},{value:'"password"',computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:'import React from "react";\nimport PropTypes from "prop-types";\nimport Label from "../Label";\nimport styled from "styled-components";\n\nconst TextInputStyledComponents = ({\n  htmlId,\n  name,\n  label,\n  type = "text",\n  required = false,\n  onChange,\n  placeholder,\n  value,\n  error,\n  children,\n  ...props\n}) => {\n  const Error = styled.div`\n    color: red;\n  `;\n\n  const Input = styled.input`\n    border: ${error && "solid 1px red"};\n    display: block;\n  `;\n\n  const Fieldset = styled.div`\n    margin-bottom: 16px;\n  `;\n\n  return (\n    <Fieldset>\n      <Label htmlFor={htmlId} label={label} required={required} />\n      <Input\n        id={htmlId}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        {...props}\n      />\n      {children}\n      {error && <Error>{error}</Error>}\n    </Fieldset>\n  );\n};\n\nTextInputStyledComponents.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object\'s property so a single change handler can be used. */\n  name: PropTypes.string.isRequired,\n\n  /** Input label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf(["text", "number", "password"]),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** Function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to the input */\n  children: PropTypes.node\n};\n\nexport default TextInputStyledComponents;\n',examples:[{name:"ExampleError",description:"",code:'import React from "react";\nimport TextInputStyledComponents from "../../../components/TextInputStyledComponents";\n\nconst ExampleError = () => {\n  return (\n    <TextInputStyledComponents\n      htmlId="example-optional"\n      label="First Name"\n      name="firstname"\n      onChange={() => {}}\n      error="First name is required."\n    />\n  );\n};\n\nexport default ExampleError;\n'}]}]},,,function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return s}));var r=t(0),a=t.n(r),o=t(10);function s(){return a.a.createElement(o.a,null)}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return s}));var r=t(0),a=t.n(r),o=t(5);function s(){return a.a.createElement(o.a,{htmlFor:"test",label:"test"})}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return s}));var r=t(0),a=t.n(r),o=t(5);function s(){return a.a.createElement(o.a,{htmlFor:"test",label:"test",required:!0})}},function(e,n,t){"use strict";t.r(n);var r=t(1),a=t(2),o=t(3),s=t(4),i=t(0),l=t.n(i),p=t(9),u=function(e){Object(s.a)(t,e);var n=Object(o.a)(t);function t(e){var a;return Object(r.a)(this,t),(a=n.call(this,e)).state={password:""},a}return Object(a.a)(t,[{key:"getQuality",value:function(){var e=this.state.password.length;return e>10?100:10*e}},{key:"render",value:function(){var e=this;return l.a.createElement("div",null,l.a.createElement(p.a,Object.assign({htmlId:"password-input-example-all-features",name:"password",onChange:function(n){return e.setState({password:n.target.value})},value:this.state.password,minLength:8,placeholder:"Enter password",showVisibilityToggle:!0,quality:this.getQuality()},this.props)))}}]),t}(i.Component);n.default=u},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return s}));var r=t(0),a=t.n(r),o=t(7);function s(){return a.a.createElement(o.a,{percent:100,width:150,height:20})}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return s}));var r=t(0),a=t.n(r),o=t(7);function s(){return a.a.createElement(o.a,{percent:10,width:150})}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return s}));var r=t(0),a=t.n(r),o=t(7);function s(){return a.a.createElement(o.a,{percent:70,width:150})}},function(e,n,t){"use strict";t.r(n);var r=t(8),a=t(0),o=t.n(a);n.default=function(){return o.a.createElement(r.a,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},error:"First name is required."})}},function(e,n,t){"use strict";t.r(n);var r=t(8),a=t(0),o=t.n(a);n.default=function(){return o.a.createElement(r.a,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){}})}},function(e,n,t){"use strict";t.r(n);var r=t(1),a=t(2),o=t(3),s=t(4),i=t(0),l=t.n(i),p=t(8),u=t(9),d=function(e){Object(s.a)(t,e);var n=Object(o.a)(t);function t(e){var a;return Object(r.a)(this,t),(a=n.call(this,e)).onChange=function(e){var n=a.state.user;n[e.target.name]=e.target.value,a.setState({user:n})},a.onSubmit=function(){var e=a.state.user;a.validate(e)&&(a.props.onSubmit(e),a.setState({submitted:!0}))},a.state={user:{email:"",password:""},errors:{},submitted:!1},a}return Object(a.a)(t,[{key:"passwordQuality",value:function(e){return e?e.length>=this.props.minPasswordLength?100:parseInt(e.length/this.props.minPasswordLength*100,10):null}},{key:"validate",value:function(e){var n=e.email,t=e.password,r={},a=this.props.minPasswordLength;return n||(r.email="Email required."),t.length<a&&(r.password="Password must be at least ".concat(a," characters.")),this.setState({errors:r}),0===Object.getOwnPropertyNames(r).length}},{key:"render",value:function(){var e=this.state,n=e.errors,t=e.submitted,r=this.state.user,a=r.email,o=r.password;return t?l.a.createElement("h2",null,this.props.confirmationMessage):l.a.createElement("div",null,l.a.createElement(p.a,{htmlId:"registration-form-email",name:"email",onChange:this.onChange,label:"Email",value:a,error:n.email,required:!0}),l.a.createElement(u.a,{htmlId:"registration-form-password",name:"password",value:o,onChange:this.onChange,quality:this.passwordQuality(o),showVisibilityToggle:!0,maxLength:50,error:n.password}),l.a.createElement("input",{type:"submit",value:"Register",onClick:this.onSubmit}))}}]),t}(l.a.Component);d.defaultProps={confirmationMessage:"Thanks for registering!",minPasswordLength:8};var c=d,m=function(e){Object(s.a)(t,e);var n=Object(o.a)(t);function t(){var e;Object(r.a)(this,t);for(var a=arguments.length,o=new Array(a),s=0;s<a;s++)o[s]=arguments[s];return(e=n.call.apply(n,[this].concat(o))).onSubmit=function(e){console.log(e)},e}return Object(a.a)(t,[{key:"render",value:function(){return l.a.createElement(c,{onSubmit:this.onSubmit})}}]),t}(i.Component);n.default=m},function(e,n,t){"use strict";t.r(n);var r=t(6),a=t(0),o=t.n(a),s=t(5),i=t(11),l=t.n(i),p=function(e){var n=e.htmlId,t=e.name,a=e.label,i=e.type,p=void 0===i?"text":i,u=e.required,d=void 0!==u&&u,c=e.onChange,m=e.placeholder,h=e.value,g=e.error,y=e.children,f=Object(r.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return o.a.createElement("div",{className:l.a.fieldset},o.a.createElement(s.a,{htmlFor:n,label:a,required:d}),o.a.createElement("input",Object.assign({id:n,type:p,name:t,placeholder:m,value:h,onChange:c,style:g&&l.a.inputError},f)),y,g&&o.a.createElement("div",{className:l.a.error},g))};n.default=function(){return o.a.createElement(p,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},error:"First name is required."})}},function(e,n,t){"use strict";t.r(n);t(40);var r=t(6),a=t(0),o=t.n(a),s=t(5),i=function(e){var n=e.htmlId,t=e.name,a=e.label,i=e.type,l=void 0===i?"text":i,p=e.required,u=void 0!==p&&p,d=e.onChange,c=e.placeholder,m=e.value,h=e.error,g=e.children,y=Object(r.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return o.a.createElement("div",{className:"textinput"},o.a.createElement(s.a,{htmlFor:n,label:a,required:u}),o.a.createElement("input",Object.assign({id:n,type:l,name:t,placeholder:c,value:m,onChange:d,className:h&&"textinput__input--state-error"},y)),g,h&&o.a.createElement("div",{className:"textinput__error"},h))};n.default=function(){return o.a.createElement(i,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},error:"First name is required."})}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),o=t(12),s=t(6),i=t(5),l=t(13);function p(){var e=Object(o.a)(["\n    margin-bottom: 16px;\n  "]);return p=function(){return e},e}function u(){var e=Object(o.a)(["\n    border: ",";\n    display: block;\n  "]);return u=function(){return e},e}function d(){var e=Object(o.a)(["\n    color: red;\n  "]);return d=function(){return e},e}var c=function(e){var n=e.htmlId,t=e.name,r=e.label,o=e.type,c=void 0===o?"text":o,m=e.required,h=void 0!==m&&m,g=e.onChange,y=e.placeholder,f=e.value,b=e.error,v=e.children,x=Object(s.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]),w=l.a.div(d()),E=l.a.input(u(),b&&"solid 1px red"),I=l.a.div(p());return a.a.createElement(I,null,a.a.createElement(i.a,{htmlFor:n,label:r,required:h}),a.a.createElement(E,Object.assign({id:n,type:c,name:t,placeholder:y,value:f,onChange:g},x)),v,b&&a.a.createElement(w,null,b))};n.default=function(){return a.a.createElement(c,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},error:"First name is required."})}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return i}));var r=t(0),a=t.n(r);function o(e){var n=e.message;return a.a.createElement("div",null,"Hello ",n)}o.defaultProps={message:"World"};var s=o;function i(){return a.a.createElement(s,{message:"Hello"})}},,,function(e,n,t){e.exports=t(42)},,,,,function(e,n,t){},function(e,n,t){var r={"./EyeIcon/Example":17,"./EyeIcon/Example.js":17,"./HelloWorld/ExampleHelloWorld":30,"./HelloWorld/ExampleHelloWorld.js":30,"./Label/ExampleOptional":18,"./Label/ExampleOptional.js":18,"./Label/ExampleRequired":19,"./Label/ExampleRequired.js":19,"./PasswordInput/ExampleAllFeatures":20,"./PasswordInput/ExampleAllFeatures.js":20,"./ProgressBar/Example100Percent":21,"./ProgressBar/Example100Percent.js":21,"./ProgressBar/Example10Percent":22,"./ProgressBar/Example10Percent.js":22,"./ProgressBar/Example70Percent":23,"./ProgressBar/Example70Percent.js":23,"./RegistrationForm/ExampleRegistrationForm":26,"./RegistrationForm/ExampleRegistrationForm.js":26,"./TextInput/ExampleError":24,"./TextInput/ExampleError.js":24,"./TextInput/ExampleOptional":25,"./TextInput/ExampleOptional.js":25,"./TextInputBEM/ExampleErrorBEM":28,"./TextInputBEM/ExampleErrorBEM.js":28,"./TextInputCSSModules/ExampleErrorCSSModules":27,"./TextInputCSSModules/ExampleErrorCSSModules.js":27,"./TextInputStyledComponents/ExampleError":29,"./TextInputStyledComponents/ExampleError.js":29};function a(e){var n=o(e);return t(n)}function o(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=39},function(e,n,t){},,function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),o=t(31),s=t.n(o),i=(t(38),t(1)),l=t(2),p=t(3),u=t(4),d=function(e){var n=e.components;return a.a.createElement("ul",{className:"navigation"},n.map((function(e){return a.a.createElement("li",{key:e},a.a.createElement("a",{href:"#".concat(e)},e))})))},c=t(15),m=t.n(c),h=t(32),g=t.n(h),y=function(e){Object(u.a)(t,e);var n=Object(p.a)(t);function t(){return Object(i.a)(this,t),n.apply(this,arguments)}return Object(l.a)(t,[{key:"componentDidMount",value:function(){m.a.registerLanguage("javascript",g.a),m.a.highlightBlock(this.element)}},{key:"render",value:function(){var e=this;return a.a.createElement("pre",{ref:function(n){e.element=n}},a.a.createElement("code",null,this.props.children))}}]),t}(a.a.Component),f=function(e){Object(u.a)(r,e);var n=Object(p.a)(r);function r(e){var t;return Object(i.a)(this,r),(t=n.call(this,e)).toggleCode=function(e){e.preventDefault(),t.setState((function(e){return{showCode:!e.showCode}}))},t.state={showCode:!1},t}return Object(l.a)(r,[{key:"render",value:function(){var e=this.state.showCode,n=this.props.example,r=n.code,o=n.description,s=n.name,i=t(39)("./".concat(this.props.componentName,"/").concat(s)).default;return a.a.createElement("div",{className:"example"},o&&a.a.createElement("h4",null,o),a.a.createElement(i,null),a.a.createElement("p",null,a.a.createElement("a",{href:"",onClick:this.toggleCode},e?"Hide":"Show"," Code")),e&&a.a.createElement(y,null,r))}}]),r}(a.a.Component),b=function(e){var n=e.props;return a.a.createElement("table",{className:"props"},a.a.createElement("thead",null,a.a.createElement("tr",null,a.a.createElement("th",null,"Name"),a.a.createElement("th",null,"Description"),a.a.createElement("th",null,"Type"),a.a.createElement("th",null,"Default"),a.a.createElement("th",null,"Required"))),a.a.createElement("tbody",null,Object.keys(n).map((function(e){return a.a.createElement("tr",{key:e},a.a.createElement("td",null,e),a.a.createElement("td",null,n[e].description),a.a.createElement("td",null,n[e].type.name),a.a.createElement("td",null,n[e].defaultValue&&n[e].defaultValue.value),a.a.createElement("td",null,n[e].required&&"X"))}))))},v=function(e){var n=e.component,t=n.name,r=n.description,o=n.props,s=n.examples;return a.a.createElement("div",{className:"componentpage"},a.a.createElement("h2",null,t),a.a.createElement("p",null,r),a.a.createElement("h3",null,"Example",s.length>1&&"s"),s.length>0?s.map((function(e){return a.a.createElement(f,{key:e.code,example:e,componentName:t})})):"No examples exist.",a.a.createElement("h3",null,"Props"),o?a.a.createElement(b,{props:o}):"This component accepts no props.")},x=t(14),w=t.n(x),E=function(e){Object(u.a)(t,e);var n=Object(p.a)(t);function t(e){var r;return Object(i.a)(this,t),(r=n.call(this,e)).state={route:window.location.hash.substr(1)},r}return Object(l.a)(t,[{key:"componentDidMount",value:function(){var e=this;window.addEventListener("hashchange",(function(){e.setState({route:window.location.hash.substr(1)})}))}},{key:"render",value:function(){var e=this.state.route,n=e?w.a.filter((function(n){return n.name===e}))[0]:w.a[0];return a.a.createElement("div",null,a.a.createElement(d,{components:w.a.map((function(e){return e.name}))}),a.a.createElement(v,{component:n}))}}]),t}(a.a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));t(41);s.a.render(a.a.createElement(a.a.StrictMode,null,a.a.createElement(E,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}],[[33,1,2]]]);
//# sourceMappingURL=main.fcf89a75.chunk.js.map